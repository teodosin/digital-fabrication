import{s as ot,e as l,a,H as at,c as o,g as s,b as r,j as st,k as rt,h as n,f as pt,i,n as O}from"./scheduler.VDxU6aNK.js";import{S as ht,i as ut}from"./index.CMIy7L5C.js";function dt(it){let p,q="Table of Contents",T,h,F='<li><a href="#assignment">Assignment</a></li> <li><a href="#group">Group</a></li> <li><a href="#research">Research</a></li> <li><a href="#button-print">Button Print</a></li>',H,u,N="Assignment",I,d,L,lt=`<code class="language-undefined">Group assignment

* Join a introduction session to get an overview of networking possibilities with XIAO ESP32
* Pick a group leader who is going to populate the group assignment page

Individual assignment

* Link to the group assignment page and describe what did you learn individually.
* Explore the WiFi capabilities of the XIAO ESP32C3 board.
* Plug it into one of the boards you produced earlier.
* Program the XIAO board to spawn an Access Point and create a simple REST API.
* The REST API should have endpoints for controlling output device(s) of your board as well as reading input.
* Document as you go and publish content on a page on your documentation website.</code>`,S,f,J="Group",k,m,U="Research",E,c,W='Still going with Rust, building on the experience from the last two test programs on the <a href="fablab-08">ESP32-C3</a> and <a href="fablab-09">ESP32-S3</a> respectively. This week the intent was to get these boards to talk to each other. Simply, pressing the button on the C3 board should activate the motor on the S3 board.',M,w,K='Because of my choice of programming language, I couldn’t directly follow the instructions on the Xiao getting started guides. So my starting point was the <a href="https://github.com/esp-rs/awesome-esp-rust" rel="nofollow">Awesome ESP Rust</a> repository, which would hopefully have example projects.',A,v,Q='The relevant crate for wifi and so on is <a href="https://github.com/esp-rs/esp-wifi" rel="nofollow">esp-wifi</a>. It’s actual <a href="https://github.com/esp-rs/esp-wifi/blob/main/esp-wifi/README.md" rel="nofollow">README</a> is of course highly relevant.',R,b,V='The crate has an <a href="https://github.com/esp-rs/esp-wifi/blob/main/esp-wifi/examples/access_point.rs" rel="nofollow">example for creating an Access Point</a>.',j,x,Y="Let’s break down the task a bit. No need to immediately jump to board-to-board communication. Let’s first try to print a message to the computer screen every time the button is pressed.",X,g,Z="Button Print",z,C,$="The process to get code to compile was painful. There were so many errors and dead ends, and I was so tunnel-visioned to get it to work that I didn’t take time to document.",B,y,tt="I eventually did get the example codes from esp-wifi to compile and run, and I was able to connect the ESP32 to my wifi network. I didn’t manage, however, to do anything with that connection. I also tried running the bluetooth example, but couldn’t connect to the device. So I’m condensing maybe two days worth of work into these two disappointing paragraphs.",D,_,et='I looked elsewhere. I found <a href="https://dev.to/apollolabsbin/embedded-rust-bluetooth-on-esp-ble-scanner-1gb7" rel="nofollow">a tutorial series</a> that seemed promising. It was only under two months old and really in depth.',G,P,nt="I read through the series carefully and implemented the code.";return{c(){p=l("h3"),p.textContent=q,T=a(),h=l("ul"),h.innerHTML=F,H=a(),u=l("h1"),u.textContent=N,I=a(),d=l("pre"),L=new at(!1),S=a(),f=l("h1"),f.textContent=J,k=a(),m=l("h1"),m.textContent=U,E=a(),c=l("p"),c.innerHTML=W,M=a(),w=l("p"),w.innerHTML=K,A=a(),v=l("p"),v.innerHTML=Q,R=a(),b=l("p"),b.innerHTML=V,j=a(),x=l("p"),x.textContent=Y,X=a(),g=l("h1"),g.textContent=Z,z=a(),C=l("p"),C.textContent=$,B=a(),y=l("p"),y.textContent=tt,D=a(),_=l("p"),_.innerHTML=et,G=a(),P=l("p"),P.textContent=nt,this.h()},l(t){p=o(t,"H3",{"data-svelte-h":!0}),s(p)!=="svelte-sbwzft"&&(p.textContent=q),T=r(t),h=o(t,"UL",{"data-svelte-h":!0}),s(h)!=="svelte-6ulxad"&&(h.innerHTML=F),H=r(t),u=o(t,"H1",{"data-svelte-h":!0}),s(u)!=="svelte-g9rspt"&&(u.textContent=N),I=r(t),d=o(t,"PRE",{class:!0});var e=st(d);L=rt(e,!1),e.forEach(n),S=r(t),f=o(t,"H1",{"data-svelte-h":!0}),s(f)!=="svelte-kxioer"&&(f.textContent=J),k=r(t),m=o(t,"H1",{"data-svelte-h":!0}),s(m)!=="svelte-1lm3rdx"&&(m.textContent=U),E=r(t),c=o(t,"P",{"data-svelte-h":!0}),s(c)!=="svelte-dgg4jp"&&(c.innerHTML=W),M=r(t),w=o(t,"P",{"data-svelte-h":!0}),s(w)!=="svelte-neszod"&&(w.innerHTML=K),A=r(t),v=o(t,"P",{"data-svelte-h":!0}),s(v)!=="svelte-1ml3dqh"&&(v.innerHTML=Q),R=r(t),b=o(t,"P",{"data-svelte-h":!0}),s(b)!=="svelte-1thneiu"&&(b.innerHTML=V),j=r(t),x=o(t,"P",{"data-svelte-h":!0}),s(x)!=="svelte-8e6n8y"&&(x.textContent=Y),X=r(t),g=o(t,"H1",{"data-svelte-h":!0}),s(g)!=="svelte-x5ocs3"&&(g.textContent=Z),z=r(t),C=o(t,"P",{"data-svelte-h":!0}),s(C)!=="svelte-8inp2t"&&(C.textContent=$),B=r(t),y=o(t,"P",{"data-svelte-h":!0}),s(y)!=="svelte-hfpw0j"&&(y.textContent=tt),D=r(t),_=o(t,"P",{"data-svelte-h":!0}),s(_)!=="svelte-jgi3c2"&&(_.innerHTML=et),G=r(t),P=o(t,"P",{"data-svelte-h":!0}),s(P)!=="svelte-zlrwxo"&&(P.textContent=nt),this.h()},h(){L.a=null,pt(d,"class","language-undefined")},m(t,e){i(t,p,e),i(t,T,e),i(t,h,e),i(t,H,e),i(t,u,e),i(t,I,e),i(t,d,e),L.m(lt,d),i(t,S,e),i(t,f,e),i(t,k,e),i(t,m,e),i(t,E,e),i(t,c,e),i(t,M,e),i(t,w,e),i(t,A,e),i(t,v,e),i(t,R,e),i(t,b,e),i(t,j,e),i(t,x,e),i(t,X,e),i(t,g,e),i(t,z,e),i(t,C,e),i(t,B,e),i(t,y,e),i(t,D,e),i(t,_,e),i(t,G,e),i(t,P,e)},p:O,i:O,o:O,d(t){t&&(n(p),n(T),n(h),n(H),n(u),n(I),n(d),n(S),n(f),n(k),n(m),n(E),n(c),n(M),n(w),n(A),n(v),n(R),n(b),n(j),n(x),n(X),n(g),n(z),n(C),n(B),n(y),n(D),n(_),n(G),n(P))}}}const ct={title:"Networking",date:"2024-05-05",description:"The twelfth assignment.",categories:["projects"],tags:["digital-fabrication"],cover:"fab11/01.png"};class wt extends ht{constructor(p){super(),ut(this,p,null,dt,ot,{})}}export{wt as default,ct as metadata};
